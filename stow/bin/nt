#!/usr/bin/env bash

set -euo pipefail

__DIR="$(dirname -- "$0")"
__FILE="$(basename -- "$0")"
declare -r __DIR __FILE
declare -r TMPLS="$__DIR"/new_templates

. "$__DIR"/.lib

VERSION="0.5"

# ------------------------------------------------------------
# DEFAULTS
# ------------------------------------------------------------

o_executables=("sh" "bash" "bashapp")

# ------------------------------------------------------------
# PUBLIC INTERFACES
# ------------------------------------------------------------

load_template() {
  local -r template="$TMPLS/$1"
  if [[ ! -f "$template" ]]; then
    ewarn "Template: \`$1\` not found. aborted."
    return 1
  fi
  local -r c="$(< "$template")"
  echo "$c"
}

save_to_file() {
  local -r contents="$1"
  local -r filepath="$2"
  # prevent override
  if [ -f "$filepath" ]; then
    ewarn "File: \`$filepath\` already exists. aborted."
    return 1
  fi

  mkdir -p "$(dirname "$filepath")"
  echo "$contents" > "$filepath"
}

function main {
  parseOptions "$@"

  # if the first param starts with a `-`, we stop
  if [[ $# -lt 1 ]] || [[ ${1:0:1} == "-" ]]; then
    help
    return 1
  fi

  local -r contents="$(load_template "$1")"

  if [[ -z ${2:-} ]]; then
    echo "$contents"
    return
  fi
  save_to_file "$contents" "$2"

  for t in "${o_executables[@]}"; do
    if [[ $t == "$1" ]]; then
      chmod +x "$2"
      break
    fi
  done

  vi "$2" "+/##cursor##" "+noh"
}

function parseOptions {
  while [[ "$#" -ge 1 ]]; do
    case $1 in

      -h | --help)
        help
        exit 2
        ;;

      -V | --version)
        ebox "version $VERSION"
        exit
        ;;

      -l | -ls | --list-templates)
        ebox "Available templates"
        for file in "$TMPLS"/*; do
          echo " - ${file#"$TMPLS/"}"
        done
        exit
        ;;

    esac
    shift
  done
}

# ------------------------------------------------------------
# INTERNALS
# ------------------------------------------------------------

function _helpOptions {
  # use `#` to separate arg from descriptin
  local options
  options="
    -h, --help                 # Display this help message
    -l, -ls, --list-templates  # Display the script version
    -V, --version              # Display the script version
  "
  echo "$options" | column -s "#" -t | sed 's/^ */    /'
}

function help {
  echo "$(basename "$0"), version ${VERSION}"
  echo "Usage: $(basename "$0") template [filename] [options]

Options:
$(_helpOptions)"
}

# ------------------------------------------------------------
# MAIN
# ------------------------------------------------------------

main "$@"
