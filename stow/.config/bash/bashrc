
# ----- ./src/_top

#
# DO NOT MODIFY directly
#
# run ./rebuild
#

# if this is NOT an interactive shell
# do not load any of the other crap
case $- in
  *i*) ;;      # interactive shell, load the configs
  *) return ;; #non-interactive shell, non-login shell, skip rc
esac

command -v ~/bin/title && ~/bin/title $'I am\nserious'
# ----- ./src/_vars

if [[ "$(uname -m)" = "x86_64" ]]; then
  BREW_PREFIX="/usr/local"
else
  BREW_PREFIX="/opt/homebrew"
fi
# ^^ is faster than ,,
#     BREW_PREFIX="$(brew --prefix)"
declare -r BREW_PREFIX
export BREW_PREFIX
export TERM=xterm-256color

if tput setaf 1 &> /dev/null; then
  tput sgr0 # reset colors
  bold=$(tput bold)
  reset=$(tput sgr0)
  # Solarized colors, taken from http://git.io/solarized-colors.
  black=$(tput setaf 0)
  blue=$(tput setaf 153)
  cyan=$(tput setaf 37)
  green=$(tput setaf 64)
  orange=$(tput setaf 166)
  purple=$(tput setaf 125)
  red=$(tput setaf 9)
  violet=$(tput setaf 61)
  white=$(tput setaf 15)
  yellow=$(tput setaf 136)
  gray=$(tput setaf 240)
else
  bold=''
  reset="\e[0m"
  black="\e[1;30m"
  blue="\e[1;34m"
  cyan="\e[1;36m"
  green="\e[1;32m"
  orange="\e[1;33m"
  purple="\e[1;35m"
  red="\e[1;31m"
  violet="\e[1;35m"
  white="\e[1;37m"
  yellow="\e[1;33m"
  gray="\e[1;33m"
fi

# ----- ./src/xdg

source "$HOME/.config/user-dirs.dirs"
export XDG_CACHE_HOME=${XDG_CACHE_HOME:=$HOME/.cache}
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=$HOME/.config}
export XDG_DATA_HOME=${XDG_DATA_HOME:=$HOME/.local/share}
export XDG_DESKTOP_DIR=${XDG_DESKTOP_DIR:=$HOME/Desktop}
export XDG_DOWNLOAD_DIR=${XDG_DOWNLOAD_DIR:=$HOME/Downloads}
export XDG_STATE_HOME=${XDG_STATE_HOME:=$HOME/.local/state}

# ----- ./src/path

p="${HOME}/bin"
p+=":${HOME}/.local/bin"
p+=":${HOME}/.cargo/bin"
p+=":/opt/homebrew/bin"
p+=":/usr/local/sbin"
p+=":${HOME}/.config/composer/vendor/bin"
export PATH="$p:$PATH"

# ----- ./src/aliases

alias vba='source venv/bin/activate'
alias tree='tree -aC --dirsfirst'
alias ls="ls -G"
alias vi="nvim"
alias :q="exit"
# brew's less is more up to date
alias less="$BREW_PREFIX/bin/less"
alias yarn='yarn --use-yarnrc "$XDG_CONFIG_HOME/yarn/config"'

# ----- ./src/functions

take() {
  mkdir -p "$*" && cd "$_" || return 1
}

wcd() {
  cd "$(dirname "$(command -v "$1")")" || return 1
}

# ----- ./src/fzf_config

bg="#2D3441"
export FZF_DEFAULT_OPTS="
--inline-info
--prompt='►▶ '
--pointer='► '
--bind=ctrl-space:toggle+up,ctrl-d:half-page-down,ctrl-u:half-page-up
--bind=alt-v:toggle-preview,alt-j:preview-down,alt-k:preview-up
--bind=alt-d:preview-half-page-down,alt-u:preview-half-page-up
--preview-window 'border-sharp'
--color=\"gutter:$bg,bg+:$bg,bg:$bg,fg:#ffb000,fg+:italic,fg+:#ffb000,hl:#689d6a,hl+:#ffffff,hl+:underline,hl+:italic,border:#ffb000\"
"

export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --no-ignore-vcs'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# ----- ./src/fzf_history

__fzf_select__() {
  local cmd opts
  cmd="${FZF_CTRL_T_COMMAND:-"command find -L . -mindepth 1 \\( -path '*/\\.*' -o -fstype 'sysfs' -o -fstype 'devfs' -o -fstype 'devtmpfs' -o -fstype 'proc' \\) -prune \
    -o -type f -print \
    -o -type d -print \
    -o -type l -print 2> /dev/null | cut -b3-"}"
  opts="--height ${FZF_TMUX_HEIGHT:-40%} --bind=ctrl-z:ignore --reverse $FZF_DEFAULT_OPTS $FZF_CTRL_T_OPTS -m"
  eval "$cmd" \
    | FZF_DEFAULT_OPTS="$opts" "$(__fzfcmd)" "$@" \
    | while read -r item; do
      printf '%q ' "$item" # escape special chars
    done
}

if [[ $- =~ i ]]; then

  __fzfcmd() {
    [[ -n "$TMUX_PANE" ]] && { [[ "${FZF_TMUX:-0}" != 0 ]] || [[ -n "$FZF_TMUX_OPTS" ]]; } \
      && echo "fzf-tmux ${FZF_TMUX_OPTS:--d${FZF_TMUX_HEIGHT:-40%}} -- " || echo "fzf"
  }

  fzf-file-widget() {
    local selected="$(__fzf_select__ "$@")"
    READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
    READLINE_POINT=$((READLINE_POINT + ${#selected}))
  }

  __fzf_history__() {
    local output opts script
    opts="--height ${FZF_TMUX_HEIGHT:-40%} --bind=ctrl-z:ignore $FZF_DEFAULT_OPTS -n2..,.. --scheme=history --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS +m --read0"
    script='BEGIN { getc; $/ = "\n\t"; $HISTCOUNT = $ENV{last_hist} + 1 } s/^[ *]//; print $HISTCOUNT - $. . "\t$_" if !$seen{$_}++'
    output=$(
      builtin fc -lnr -2147483648 \
        | last_hist=$(HISTTIMEFORMAT='' builtin history 1) perl -n -l0 -e "$script" \
        | FZF_DEFAULT_OPTS="$opts" "$(__fzfcmd)" --query "$READLINE_LINE"
    ) || return
    READLINE_LINE=${output#*$'\t'}
    if [[ -z "$READLINE_POINT" ]]; then
      echo "$READLINE_LINE"
    else
      READLINE_POINT=0x7fffffff
    fi
  }

  # Required to refresh the prompt after fzf
  bind -m emacs-standard '"\er": redraw-current-line'

  bind -m vi-command '"\C-z": emacs-editing-mode'
  bind -m vi-insert '"\C-z": emacs-editing-mode'
  bind -m emacs-standard '"\C-z": vi-editing-mode'

  if ((BASH_VERSINFO[0] < 4)); then
    # CTRL-T - Paste the selected file path into the command line
    bind -m emacs-standard '"\C-t": " \C-b\C-k \C-u`__fzf_select__`\e\C-e\er\C-a\C-y\C-h\C-e\e \C-y\ey\C-x\C-x\C-f"'
    bind -m vi-command '"\C-t": "\C-z\C-t\C-z"'
    bind -m vi-insert '"\C-t": "\C-z\C-t\C-z"'

    # CTRL-R - Paste the selected command from history into the command line
    bind -m emacs-standard '"\C-r": "\C-e \C-u\C-y\ey\C-u"$(__fzf_history__)"\e\C-e\er"'
    bind -m vi-command '"\C-r": "\C-z\C-r\C-z"'
    bind -m vi-insert '"\C-r": "\C-z\C-r\C-z"'
  else
    # CTRL-T - Paste the selected file path into the command line
    bind -m emacs-standard -x '"\C-t": fzf-file-widget'
    bind -m vi-command -x '"\C-t": fzf-file-widget'
    bind -m vi-insert -x '"\C-t": fzf-file-widget'

    # CTRL-R - Paste the selected command from history into the command line
    bind -m emacs-standard -x '"\C-r": __fzf_history__'
    bind -m vi-command -x '"\C-r": __fzf_history__'
    bind -m vi-insert -x '"\C-r": __fzf_history__'
  fi

fi

# ----- ./src/history

# History settings (don't save lines beginning with space or matching the
# previous entry)
export HISTCONTROL=ignoreboth
export HISTSIZE=100000
export HISTFILESIZE=200000
export HISTIGNORE="ls:cd -"
export HISTFILE=${XDG_DATA_HOME}/bash/.bash_history
shopt -s histappend # append to history i.e don't overwrite it

# Save multiline commands in same history entry with embedded newlines
shopt -s cmdhist
shopt -s lithist

# ----- ./src/lynx

export LYNX_CFG="$HOME/.config/lynx/lynx.cfg"
export LYNX_LSS="$HOME/.config/lynx/lynx.lss"

function lynx {
  #useragent="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"
  #let's attempt to be always mobile
  useragent="Mozilla/5.0 (Android 13; Mobile; rv:68.0) Gecko/68.0 Firefox/106.0"

  "$BREW_PREFIX"/bin/lynx -useragent="$useragent" "$@"
}

function ? {
  lynx "https://lite.duckduckgo.com/lite?kd=-1&kp=-1&q=$*"
}

# ----- ./src/prompt

extract_git_branch_name() {
  # make a copy of the previous exit status
  local ps=$?
  local branch
  branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
  if [ "$branch" != "" ]; then
    echo " <${branch}>"
  fi
  # and return it so the redness can start
  return "$ps"
}

PS1=""
# working directory full path
PS1+="\[${green}\]\w"
# git branch
PS1+="\[${yellow}\]\$(extract_git_branch_name)\[${reset}\]"
# the dollar will be red if exit code was baaaad
PS1+=' $([ $? == 0 ] && echo "\[${white}\]\$ " || echo "\[${red}\]\$ ")\[${reset}\]'

export PS1

# ----- ./src/settings

# Hide the deprecation warning (zsh) macos
export BASH_SILENCE_DEPRECATION_WARNING=1

export VISUAL=nvim
export EDITOR="$VISUAL"
export SYSTEMD_EDITOR="$VISUAL"
export SHELL="$BREW_PREFIX/bin/bash"

# todo: these exports probably should be placed in another file
export CARGO_HOME="$XDG_DATA_HOME"/cargo
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME"/npm/npmrc
export MYSQL_HISTFILE="$XDG_DATA_HOME"/mysql_history
export PYTHONPYCACHEPREFIX="$XDG_CACHE_HOME"/python
export PYTHONUSERBASE="$XDG_DATA_HOME"/python
export TERMINFO="$XDG_DATA_HOME"/terminfo
export TERMINFO_DIRS="$XDG_DATA_HOME"/terminfo:/usr/share/terminfo
export WGETRC="$XDG_CONFIG_HOME/wgetrc"
alias wget="wget --hsts-file=$XDG_CACHE_HOME/wget-hsts"
# dangerous - first move your existing passwords,
# see supported apps https://wiki.archlinux.org/title/XDG_Base_Directory
#export GNUPGHOME="$XDG_DATA_HOME"/gnupg,
#export PASSWORD_STORE_DIR="$XDG_DATA_HOME"/pass

# Highlight section titles in manual pages.
export LESS_TERMCAP_md="$yellow"

# ----- ./src/z

_Z_DATA_DIR="$XDG_DATA_HOME/z"
_Z_DATA="$_Z_DATA_DIR/.z"
[ -d "$_Z_DATA_DIR" ] || mkdir -p "$_Z_DATA_DIR"

. "$BREW_PREFIX"/etc/profile.d/z.sh

function zls() {
  local dir
  dir=$(z -l | sort --reverse --numeric-sort | fzf --no-sort --scroll-off 2 --prompt=">> " | awk '{print $2}')
  cd "$dir" || exit 1
}
