
# ----- _top

# ------------------------------------------------------------------------------
# !!  This file is auto-generated.
#     Do NOT modify it directly — your changes will be overwritten.
#     To update or customize, run: ./rebuild
# ------------------------------------------------------------------------------

# Skip if this is not an interactive shell.
# Avoid loading interactive-only configurations in non-interactive contexts.
[[ $- != *i* ]] && return

# Optional fun title script — uncomment if needed.
# if command -v ~/bin/title &> /dev/null; then
#   ~/bin/title $'I am\nserious'
# fi
#

# ----- _vars

# ------------------------------------------------------------------------------
# Environment & Terminal Colors
# ------------------------------------------------------------------------------

# Determine Homebrew prefix based on architecture (faster than calling `brew`)
if [[ "$(uname -m)" == "x86_64" ]]; then
  BREW_PREFIX="/usr/local"
else
  BREW_PREFIX="/opt/homebrew"
fi
readonly BREW_PREFIX
export BREW_PREFIX

# Set terminal type to support 256 colors
export TERM="xterm-256color"

# Setup color variables using `tput` when available
if tput setaf 1 &> /dev/null; then
  tput sgr0 # Reset terminal formatting

  bold=$(tput bold)
  reset=$(tput sgr0)

  # Solarized-style ANSI colors
  black=$(tput setaf 0)
  blue=$(tput setaf 153)
  cyan=$(tput setaf 37)
  green=$(tput setaf 64)
  orange=$(tput setaf 166)
  purple=$(tput setaf 125)
  red=$(tput setaf 9)
  violet=$(tput setaf 61)
  white=$(tput setaf 15)
  yellow=$(tput setaf 136)
  gray=$(tput setaf 240)
else
  # Fallback ANSI escape sequences
  bold=''
  reset='\e[0m'

  black='\e[1;30m'
  blue='\e[1;34m'
  cyan='\e[1;36m'
  green='\e[1;32m'
  orange='\e[1;33m'
  purple='\e[1;35m'
  red='\e[1;31m'
  violet='\e[1;35m'
  white='\e[1;37m'
  yellow='\e[1;33m'
  gray='\e[1;33m'
fi


# ----- xdg

source "$HOME/.config/user-dirs.dirs" || true
export XDG_CACHE_HOME=${XDG_CACHE_HOME:=$HOME/.cache}
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=$HOME/.config}
export XDG_DATA_HOME=${XDG_DATA_HOME:=$HOME/.local/share}
export XDG_DESKTOP_DIR=${XDG_DESKTOP_DIR:=$HOME/Desktop}
export XDG_DOWNLOAD_DIR=${XDG_DOWNLOAD_DIR:=$HOME/Downloads}
export XDG_STATE_HOME=${XDG_STATE_HOME:=$HOME/.local/state}

# ----- path

p="${HOME}/bin"
p+=":${HOME}/.local/bin"
p+=":/opt/homebrew/bin"
p+=":/usr/local/sbin"
export PATH="$p:$PATH"

# ----- aliases

# Activate virtual environment quickly
alias vba='source venv/bin/activate'

# Enhanced directory tree view
alias tree='tree -aC --dirsfirst'

# Enable colorized output for ls (macOS/BSD-style)
alias ls='ls -G'

# ----- functions

wcd() {
  if [ -z "$1" ]; then
    echo "Usage: wcd <command>"
    return 1
  fi

  local cmd_path
  cmd_path="$(command -v "$1")" || {
    echo "Command '$1' not found"
    return 1
  }

  cd -- "$(dirname "$cmd_path")" || return 1
}

take() {
  if [ -z "$1" ]; then
    echo "Usage: take <directory_path>"
    return 1
  fi

  mkdir -p -- "$1" && cd -- "$1" || return 1
}


# ----- history

# History settings (don't save lines beginning with space or matching the
# previous entry)
export HISTCONTROL=ignoreboth
export HISTSIZE=100000
export HISTFILESIZE=200000
export HISTIGNORE="ls:cd -"
export HISTFILE=${XDG_DATA_HOME}/bash/.bash_history
shopt -s histappend # append to history i.e don't overwrite it

# Save multiline commands in same history entry with embedded newlines
shopt -s cmdhist
shopt -s lithist

# ----- lynx

export LYNX_CFG="$HOME/.config/lynx/lynx.cfg"
export LYNX_LSS="$HOME/.config/lynx/lynx.lss"

function lynx {
  #useragent="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0"
  #let's attempt to be always mobile
  useragent="Mozilla/5.0 (Android 13; Mobile; rv:68.0) Gecko/68.0 Firefox/106.0"

  exec "$BREW_PREFIX"/bin/lynx -useragent="$useragent" "$@"
}

function ? {
  exec lynx "https://lite.duckduckgo.com/lite?kd=-1&kp=-1&q=$*"
}

# ----- prompt

# Function to extract Git branch name
extract_git_branch_name() {
  local ps=$?  # Preserve previous exit status
  local branch

  # Try to get symbolic branch name, fallback to short commit hash
  branch=$(git symbolic-ref --short HEAD 2>/dev/null || git rev-parse --short HEAD 2>/dev/null)

  if [ -n "$branch" ]; then
    echo " <$branch>"
  fi

  return "$ps"  # Restore previous exit status
}

# Prompt definition
PS1=""
PS1+="${green}\w"                       # Working directory
PS1+="${yellow}\$(extract_git_branch_name)"  # Git branch info
PS1+="${reset} \$( [ \$? -eq 0 ] && echo \"${white}\\$ \" || echo \"${red}\\$ \" )${reset}"


# ----- settings

#!/usr/bin/env bash
# env_setup.sh - environment variables and aliases setup

# --- Silence macOS bash deprecation warning for zsh users ---
export BASH_SILENCE_DEPRECATION_WARNING=1

# --- Editor settings ---
export VISUAL=vi
export EDITOR="$VISUAL"
export SYSTEMD_EDITOR="$VISUAL"

# --- Set SHELL environment (adjust BREW_PREFIX if needed) ---
# Make sure BREW_PREFIX is defined; otherwise set a fallback:
export SHELL="$BREW_PREFIX/bin/bash"

# --- XDG Base Directory environment variables ---

# Make sure XDG variables are defined or set defaults:
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"

export CARGO_HOME="$XDG_DATA_HOME/cargo"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export MYSQL_HISTFILE="$XDG_DATA_HOME/mysql_history"
export PYTHONPYCACHEPREFIX="$XDG_CACHE_HOME/python"
export PYTHONUSERBASE="$XDG_DATA_HOME/python"
export TERMINFO="$XDG_DATA_HOME/terminfo"
export TERMINFO_DIRS="$XDG_DATA_HOME/terminfo:/usr/share/terminfo"
export WGETRC="$XDG_CONFIG_HOME/wgetrc"

# --- Aliases ---
alias wget="wget --hsts-file=$XDG_CACHE_HOME/wget-hsts"

# --- WARNING: Uncomment only after migrating passwords and data ---
# see supported apps https://wiki.archlinux.org/title/XDG_Base_Directory
# export GNUPGHOME="$XDG_DATA_HOME/gnupg"
# export PASSWORD_STORE_DIR="$XDG_DATA_HOME/pass"

# --- Color for manual page section titles ---
# Define yellow color escape sequence for LESS_TERMCAP_md
export LESS_TERMCAP_md="${yellow}"

